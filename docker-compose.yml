services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - /var/www/html/node_modules
        environment:
            DB_HOST: postgres
            REDIS_HOST: redis
            CHOKIDAR_USEPOLLING: "true"
            WATCHPACK_POLLING: "true"
        ports:
            - "5173:5173"
        depends_on: [ postgres, redis ]
        healthcheck:
            test: [ "CMD-SHELL", "php -r 'echo @fsockopen(\"app\",9000)?\"OK\":\"FAIL\";' " ]
            interval: 10s
            timeout: 3s
            retries: 5

    postgres:
        image: postgres:16
        environment:
            POSTGRES_DB: chat
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 10s
            timeout: 3s
            retries: 5

    nginx:
        image: nginx:1.27
        ports: [ "80:80" ]
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on: [ app ]
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost" ]
            interval: 10s
            timeout: 3s
            retries: 5

    redis:
        image: redis:7
        ports: ["6379:6379"]
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 10s
            timeout: 3s
            retries: 5

    soketi:
        image: quay.io/soketi/soketi:latest
        environment:
            SOKETI_DEBUG: "1"
            SOKETI_DEFAULT_APP_ID: ${PUSHER_APP_ID:-app-id}
            SOKETI_DEFAULT_APP_KEY: ${PUSHER_APP_KEY:-app-key}
            SOKETI_DEFAULT_APP_SECRET: ${PUSHER_APP_SECRET:-app-secret}
            SOKETI_DEFAULT_APP_ENABLE_CLIENT_MESSAGES: "true"
            SOKETI_DEFAULT_APP_ENABLE_USER_AUTHENTICATION: "true"
        ports:
            - "6001:6001"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:6001"]
            interval: 10s
            timeout: 3s
            retries: 5

volumes:
    pgdata:
